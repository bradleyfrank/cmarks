
# Bookmarks CLI commands so they don't get lost in history.
# Author: Brad Frank
# Date: August 2021
# Tested: zsh 5.8 (x86_64-apple-darwin20.1.0)
# Requires: fzf, gh
#

[[ -z $CMARKS_CONFIG ]] && export CMARKS_CONFIG="$HOME/.config/cmarks"

if [[ -s "$CMARKS_CONFIG" ]]; then
  echo "CMARKS_FILE=$HOME/.cmarks" >> "$CMARKS_CONFIG"
  echo "CMARKS_GIST=" >> "$CMARKS_CONFIG"
fi

cmarks() {
  source "$CMARKS_CONFIG"; [[ -f "$CMARKS_FILE" ]] || touch "$CMARKS_FILE"

  _cm_usage() {
    echo "Usage: cmarks [OPTION]"
    echo "-a <num1>[,<num2>]    Add commands from history"
    echo "-d <num1>[,<num2>]    Delete commands from bookmarks"
    echo "-f                    Use fzf to find commands in bookmarks and append to history"
    echo "-l                    List all commands in bookmarks"
    echo "-p <num1>[,<num2>]    Print commands to stdout from bookmarks"
    echo "-r <num1>[,<num2>]    Retrieve commands from bookmarks and append to history"
    echo "-s push|pull          Sync bookmarks with GitHub gist"
  }

  _cm_gist_sync() {
    gh auth status &> /dev/null || { echo "Not authenticated to GitHub." >&2; return 1; }
    [[ -z $CMARKS_GIST ]] && { echo "No Gist ID set." >&2; return 1; }
    case $1 in
      push) _cm_gist_push ;;
      pull) _cm_gist_pull ;;
      *)    _cm_usage >&2; return 1 ;;
    esac
  }

  _cm_append() {
    local cmd; cmd="$(awk --field-separator '  ' '{print $2}' "$1")"
    case "$SHELL" in
      *zsh*)  fc -R =("$cmd"); return $? ;;
      *bash*) history -s "$cmd"; return $? ;;
      *)      echo "Shell not supported." >&2; return 1 ;;
    esac
  }

  _cm_arg() { cut --delimiter , --fields $1 <<< $OPTARG; }
  _cm_compact() { cat <(awk NF "$CMARKS_FILE") > "$CMARKS_FILE"; }
  _cm_count_lines() { wc --lines "$CMARKS_FILE" | awk '{print $1}' | tr --delete '\n' | wc --chars }
  _cm_find() { fzf --ansi -i --exit-0 --height=50% --no-multi --inline-info --border rounded < "$CMARKS_FILE"; }
  _cm_gist_pull() { { gh gist view "$CMARKS_GIST" && cat "$CMARKS_FILE"; } | awk '!x[$0]++' > "$CMARKS_FILE"; }
  _cm_gist_push() { VISUAL='tee' gh gist edit "$CMARKS_GIST" < "$CMARKS_FILE" > /dev/null; }

  while getopts ':ha:d:flp:r:s:' flag; do
    case "$flag" in
      h)  _cm_usage; return 0 ;;
      a)  fc -lin "$(_cm_arg 1)" "$(_cm_arg 2)" >> "$CMARKS_FILE"; _cm_compact ;;
      d)  sed --in-place "${OPTARG}d" "$CMARKS_FILE"; _cm_compact ;;
      f)  _cm_append "$(_cm_find)" ;;
      l)  nl --number-width "$(_cm_count_lines)" --number-format rn "$CMARKS_FILE" ;;
      p)  sed "${OPTARG}!d" "$CMARKS_FILE" ;;
      r)  _cm_append "$(sed "${OPTARG}!d" "$CMARKS_FILE")" ;;
      s)  _cm_gist_sync "$OPTARG" ;;
      \?) echo "cmarks: invalid option -$OPTARG" >&2 ;;
      :)  echo "cmarks: option -$OPTARG requires an argument" >&2 ;;
      *)  echo; _cm_usage >&2; return 1 ;;
    esac
  done
}
